{"version":3,"sources":["components/Lab1/algorithms/alg1.js","components/Lab1/tasks/Task1.js","components/Lab1/algorithms/alg2.js","components/Lab1/tasks/Task2.js","components/Lab1/algorithms/alg3.js","components/Lab1/tasks/Task3.js","components/Lab1/algorithms/alg4.js","components/Lab1/tasks/Task4.js","components/Lab1/Lab1.js","components/App.js","index.js"],"names":["replaceElement","array","index","value","temp","slice","splice","alg1","n","k","i","Array","fill","a","finalSet","push","every","Task1","useState","setN","setK","output","setOutput","className","onSubmit","e","preventDefault","out","parseInt","type","min","name","placeholder","onChange","target","length","map","reduce","b","concat","alg2","newValue","Task2","max","createArray","foo","alg3","Task3","generateBinaryArrays","filter","x","alg4","auxiliaryArray","Task4","Lab1","App","to","activeStyle","fontWeight","textDecoration","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA4BMA,EAAiB,SAACC,EAAOC,EAAOC,GACpC,IAAIC,EAAOH,EAAMI,QAEjB,OADAD,EAAKE,OAAOJ,EAAO,EAAGC,GACfC,GAGMG,EAlCF,SAACC,EAAGC,GACf,IAIIC,EAJAT,EAAQ,IAAIU,MAAMH,GAAGI,KAAK,GAC1BC,EAAI,IAAIF,MAAMH,GAAGI,KAAKH,GACtBK,EAAW,GAIf,IAHAA,EAASC,KAAKd,IAGNA,EAAMe,OAAM,SAACb,EAAOD,GAAR,OAAkBC,IAAUU,EAAEX,OAAS,CAEzD,GAAID,EADJS,EAAIF,EAAI,GACOC,EACbR,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,GAAK,QACvC,GAAIT,EAAMS,KAAOD,EAAG,CACzB,KAAOR,EAAMS,KAAOD,GAClBC,IAIF,IAFAT,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,GAAK,GAC5CA,IACOA,EAAIF,GACTP,EAAQD,EAAeC,EAAOS,EAAG,GACjCA,IAGJI,EAASC,KAAKd,GAGhB,OAAOa,G,OCyCMG,EA9DD,WAAO,IAAD,EACAC,mBAAS,GADT,mBACXV,EADW,KACRW,EADQ,OAEAD,mBAAS,GAFT,mBAEXT,EAFW,KAERW,EAFQ,OAGUF,mBAAS,MAHnB,mBAGXG,EAHW,KAGHC,EAHG,KAWlB,OACE,qCACE,oBAAIC,UAAU,UAAd,uBACA,uBAAMC,SATY,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAMpB,EAAKqB,SAASpB,GAAIoB,SAASnB,IACrCa,EAAUK,IAMuBJ,UAAU,OAAzC,UACE,2DAEE,uBACEM,KAAK,SACLC,IAAI,IACJC,KAAK,IACLR,UAAU,QACVS,YAAaxB,EACbyB,SAAU,SAACR,GAAD,OAAON,EAAKM,EAAES,OAAO/B,aAInC,2DAEE,uBACE0B,KAAK,SACLC,IAAI,IACJC,KAAK,IACLR,UAAU,QACVS,YAAavB,EACbwB,SAAU,SAACR,GAAD,OAAOL,EAAKK,EAAES,OAAO/B,aAGnC,yBAAQ0B,KAAK,SAASN,UAAU,SAAhC,2BACiBf,EADjB,QACyBC,QAG1BY,GACC,qCACE,qBAAIE,UAAU,cAAd,iCAAiDF,EAAOc,UACxD,oBAAIZ,UAAU,cAAd,SACGF,EAAOe,KAAI,SAACnC,GAAD,OACV,oBAAgBsB,UAAU,oBAA1B,SACGtB,EACEoC,QAAO,SAACxB,EAAGyB,GACV,OAAOzB,EAAE0B,OAAOD,GAAGC,OAAO,OACzB,IACFlC,MAAM,GAAI,IALNJ,eCnBjBD,EAAiB,SAACC,EAAOC,EAAOC,GACpC,IAAIC,EAAOH,EAAMI,QAEjB,OADAD,EAAKE,OAAOJ,EAAO,EAAGC,GACfC,GAGMoC,EAtCF,SAAChC,GACZ,IAIIE,EACA+B,EALAxC,EAAQ,IAAIU,MAAMH,GAAGI,KAAK,GAC1BE,EAAW,GAMf,IALAA,EAASC,KAAKd,KAKD,CAGX,GAAIA,EAFJS,EAAIF,EAAI,KAESE,EAAI,GAAkB,IAAbT,EAAMS,GAAU,CACxC,KAAOT,EAAMS,KAAOA,EAAI,GAAkB,IAAbT,EAAMS,IACjCA,IAEF,GAAIA,EAAI,EAAG,MAGX,IAFAT,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,GAAK,GAC5CA,IACOA,EAAIF,GACTP,EAAQD,EAAeC,EAAOS,EAAG,GACjCA,SAEOT,EAAMS,GAAKA,EAAI,IACxB+B,EAAWxC,EAAMS,GAAK,EAAI,EAAIT,EAAMS,GAAK,EAAI,EAC7CT,EAAQD,EAAeC,EAAOS,EAAG+B,IAEnC3B,EAASC,KAAKd,GAGhB,OAAOa,GC0BM4B,EAnDD,WAAO,IAAD,EACAxB,mBAAS,GADT,mBACXV,EADW,KACRW,EADQ,OAEUD,mBAAS,MAFnB,mBAEXG,EAFW,KAEHC,EAFG,KAUlB,OACE,qCACE,oBAAIC,UAAU,UAAd,uBACA,uBAAMC,SATY,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAMa,EAAKZ,SAASpB,IACxBc,EAAUK,IAMuBJ,UAAU,OAAzC,UACE,2DAEE,uBACEM,KAAK,SACLC,IAAI,IAEJa,IAAI,IACJZ,KAAK,IACLR,UAAU,QACVS,YAAaxB,EACbyB,SAAU,SAACR,GAAD,OAAON,EAAKM,EAAES,OAAO/B,aAGnC,yBAAQ0B,KAAK,SAASN,UAAU,SAAhC,2BACiBf,QAGlBa,GACC,qCACE,qBAAIE,UAAU,cAAd,iCAAiDF,EAAOc,UACxD,oBAAIZ,UAAU,cAAd,SACGF,EAAOe,KAAI,SAACnC,GAAD,OACV,oBAAgBsB,UAAU,oBAA1B,SACGtB,EACEoC,QAAO,SAACxB,EAAGyB,GACV,OAAOzB,EAAE0B,OAAOD,GAAGC,OAAO,OACzB,IACFlC,MAAM,GAAI,IALNJ,eCZjB2C,EAAc,SAACpC,GAEnB,IADA,IAAIqC,EAAM,GACDnC,EAAI,EAAGA,GAAKF,EAAGE,IACtBmC,EAAI9B,KAAKL,GAEX,OAAOmC,GAGH7C,EAAiB,SAACC,EAAOC,EAAOC,GACpC,IAAIC,EAAOH,EAAMI,QAEjB,OADAD,EAAKE,OAAOJ,EAAO,EAAGC,GACfC,GAGM0C,EA1CF,SAACtC,EAAGC,GACf,IAGIC,EAHAT,EAAQ2C,EAAYpC,GACpBM,EAAW,GAIf,IAHAA,EAASC,KAAKd,KAGD,CAEX,GAAIA,EADJS,EAAIF,EAAI,KACSC,EAAID,EAAIE,EAAI,EAAG,CAC9B,KAAOT,EAAMS,KAAOD,EAAID,EAAIE,EAAI,GAC9BA,IAEF,GAAIA,EAAI,EAAG,MAGX,IAFAT,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,GAAK,GAC5CA,IACOA,EAAIF,GACTP,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,EAAI,GAAK,GAChDA,SAEOT,EAAMS,GAAKD,IACpBR,EAAQD,EAAeC,EAAOS,EAAGT,EAAMS,GAAK,IAE9CI,EAASC,KAAKd,GAGhB,OAAOa,GCyCMiC,EA9DD,WAAO,IAAD,EACA7B,mBAAS,GADT,mBACXV,EADW,KACRW,EADQ,OAEAD,mBAAS,GAFT,mBAEXT,EAFW,KAERW,EAFQ,OAGUF,mBAAS,MAHnB,mBAGXG,EAHW,KAGHC,EAHG,KAWlB,OACE,qCACE,oBAAIC,UAAU,UAAd,uBACA,uBAAMC,SATY,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAMmB,EAAKlB,SAASpB,GAAIoB,SAASnB,IACrCa,EAAUK,IAMuBJ,UAAU,OAAzC,UACE,2DAEE,uBACEM,KAAK,SACLC,IAAI,IACJC,KAAK,IACLR,UAAU,QACVS,YAAaxB,EACbyB,SAAU,SAACR,GAAD,OAAON,EAAKM,EAAES,OAAO/B,aAInC,2DAEE,uBACE0B,KAAK,SACLC,IAAKtB,EACLuB,KAAK,IACLR,UAAU,QACVS,YAAavB,EACbwB,SAAU,SAACR,GAAD,OAAOL,EAAKK,EAAES,OAAO/B,aAGnC,yBAAQ0B,KAAK,SAASN,UAAU,SAAhC,2BACiBf,EADjB,QACyBC,QAG1BY,GACC,qCACE,qBAAIE,UAAU,cAAd,iCAAiDF,EAAOc,UACxD,oBAAIZ,UAAU,cAAd,SACGF,EAAOe,KAAI,SAACnC,GAAD,OACV,oBAAgBsB,UAAU,oBAA1B,SACGtB,EACEoC,QAAO,SAACxB,EAAGyB,GACV,OAAOzB,EAAE0B,OAAOD,GAAGC,OAAO,OACzB,IACFlC,MAAM,GAAI,IALNJ,eChCjB+C,EAAuB,SAACxC,GAC5B,IAIIE,EAJAI,EAAW,GACXb,EAAQ,IAAIU,MAAMH,GAAGI,KAAK,GAI9B,IAHAE,EAASC,KAAKd,KAGD,CAIX,GAHAS,EAAIF,EAAI,EACDP,EAAMgD,QAAO,SAACC,GAAD,OAAa,IAANA,KAASf,OAAS,IAAM,EAGjDlC,EAAQD,EAAeC,EAAOS,EAAgB,IAAbT,EAAMS,GAAW,EAAI,OACjD,CACL,KAAoB,IAAbT,EAAMS,IACXA,IAEF,GAAU,IAANA,EAAS,MAEbT,EAAQD,EAAeC,EAAOS,EAAI,EAAoB,IAAjBT,EAAMS,EAAI,GAAW,EAAI,GAEhEI,EAASC,KAAKd,GAGhB,OAAOa,GAGHd,EAAiB,SAACC,EAAOC,EAAOC,GACpC,IAAIC,EAAOH,EAAMI,QAEjB,OADAD,EAAKE,OAAOJ,EAAO,EAAGC,GACfC,GAGM+C,EAnDF,SAAC3C,GACZ,IAMI4C,EANAtC,EAAW,GACf,OAAU,IAANN,GACFM,EAASC,KAAKD,GACPA,IAEGkC,EAAqBxC,GAG3B4B,KAAI,SAACvB,GAKT,OAJAuC,EAAiB,GACjBvC,EAAEoC,QAAO,SAAC9C,EAAOD,GAAR,OACG,IAAVC,EAAciD,EAAerC,KAAKb,EAAQ,GAAK,QAE1CY,EAASC,KAAKqC,MAEhBtC,ICyCMuC,EArDD,WAAO,IAAD,EACAnC,mBAAS,GADT,mBACXV,EADW,KACRW,EADQ,OAEUD,mBAAS,MAFnB,mBAEXG,EAFW,KAEHC,EAFG,KAUlB,OACE,qCACE,oBAAIC,UAAU,UAAd,uBACA,uBAAMC,SATY,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAMwB,EAAKvB,SAASpB,IACxBc,EAAUK,IAMuBJ,UAAU,OAAzC,UACE,2DAEE,uBACEM,KAAK,SACLC,IAAI,IACJC,KAAK,IACLR,UAAU,QACVS,YAAaxB,EACbyB,SAAU,SAACR,GAAD,OAAON,EAAKM,EAAES,OAAO/B,aAGnC,yBAAQ0B,KAAK,SAASN,UAAU,SAAhC,2BACiBf,QAGlBa,GACC,qCACE,qBAAIE,UAAU,cAAd,iCAAiDF,EAAOc,UACxD,qBAAIZ,UAAU,cAAd,UAEE,oBAAgBA,UAAU,oBAA1B,mBAAQ,SAGPF,EAAOe,KAAI,SAACnC,EAAOC,GAAR,OACV,oBAAgBqB,UAAU,oBAA1B,SACGtB,EACEoC,QAAO,SAACxB,EAAGyB,GACV,OAAOzB,EAAE0B,OAAOD,GAAGC,OAAO,OACzB,IACFlC,MAAM,GAAI,IALNH,gBCxBRoD,MAXf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCkCSC,MApCf,WACE,OACE,sBAAKhC,UAAU,gBAAf,UACE,oBAAIA,UAAU,yBAAd,uCACA,cAAC,IAAD,UACE,gCACE,8BACE,oBAAIA,UAAU,WAAd,SACE,oBAAIA,UAAU,iBAAd,SACE,cAAC,IAAD,CACEiC,GAAG,QACHjC,UAAU,aACVkC,YAAa,CACXC,WAAY,OACZC,eAAgB,aALpB,wBAcN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,MACZ,cAAC,IAAD,CAAUJ,GAAG,kBClCzBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1424447c.chunk.js","sourcesContent":["const alg1 = (n, k) => {\r\n  var array = new Array(n).fill(1);\r\n  var a = new Array(n).fill(k);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n  let i;\r\n\r\n  while (!array.every((value, index) => value === a[index])) {\r\n    i = n - 1;\r\n    if (array[i] < k) {\r\n      array = replaceElement(array, i, array[i] + 1);\r\n    } else if (array[i] === k) {\r\n      while (array[i] === k) {\r\n        i--;\r\n      }\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, 1);\r\n        i++;\r\n      }\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg1;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg1 from '../algorithms/alg1';\r\n\r\nconst Task1 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg1(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 1</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n","const alg2 = (n) => {\r\n  var array = new Array(n).fill(1);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n\r\n  let i;\r\n  let newValue;\r\n\r\n  while (true) {\r\n    i = n - 1;\r\n\r\n    if (array[i] === i + 1 || array[i] === 9) {\r\n      while (array[i] === i + 1 || array[i] === 9) {\r\n        i--;\r\n      }\r\n      if (i < 0) break;\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, 1);\r\n        i++;\r\n      }\r\n    } else if (array[i] < i + 1) {\r\n      newValue = array[i] + 1 < 9 ? array[i] + 1 : 9;\r\n      array = replaceElement(array, i, newValue);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg2(parseInt(n));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            // with more than 9 => out of memory error\r\n            max=\"9\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","const alg3 = (n, k) => {\r\n  var array = createArray(n);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n  let i;\r\n\r\n  while (true) {\r\n    i = n - 1;\r\n    if (array[i] === k - n + i + 1) {\r\n      while (array[i] === k - n + i + 1) {\r\n        i--;\r\n      }\r\n      if (i < 0) break;\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, array[i - 1] + 1);\r\n        i++;\r\n      }\r\n    } else if (array[i] < k) {\r\n      array = replaceElement(array, i, array[i] + 1);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst createArray = (n) => {\r\n  var foo = [];\r\n  for (var i = 1; i <= n; i++) {\r\n    foo.push(i);\r\n  }\r\n  return foo;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg3(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min={n}\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","const alg4 = (n) => {\r\n  let finalSet = [];\r\n  if (n === 0) {\r\n    finalSet.push(finalSet);\r\n    return finalSet;\r\n  }\r\n  let array = generateBinaryArrays(n);\r\n  let auxiliaryArray;\r\n\r\n  array.map((a) => {\r\n    auxiliaryArray = [];\r\n    a.filter((value, index) =>\r\n      value === 1 ? auxiliaryArray.push(index + 1) : null\r\n    );\r\n    return finalSet.push(auxiliaryArray);\r\n  });\r\n  return finalSet;\r\n};\r\n\r\nconst generateBinaryArrays = (n) => {\r\n  let finalSet = [];\r\n  let array = new Array(n).fill(0);\r\n  finalSet.push(array);\r\n  let even;\r\n  let i;\r\n  while (true) {\r\n    i = n - 1;\r\n    even = array.filter((x) => x === 1).length % 2 === 0 ? true : false;\r\n\r\n    if (even) {\r\n      array = replaceElement(array, i, array[i] === 1 ? 0 : 1);\r\n    } else {\r\n      while (array[i] === 0) {\r\n        i--;\r\n      }\r\n      if (i === 0) break;\r\n\r\n      array = replaceElement(array, i - 1, array[i - 1] === 1 ? 0 : 1);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg4;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg4 from '../algorithms/alg4';\r\n\r\nconst Task4 = () => {\r\n  const [n, setN] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg4(parseInt(n));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 4</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {/* empty array cant display its elements and its not worth to check 2^n times if it is this set */}\r\n            <li key=\"empty\" className=\"output-list__item\">\r\n              ∅\r\n            </li>\r\n            {output.map((array, index) => (\r\n              <li key={index} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task4;\r\n","import React from 'react';\r\n\r\nimport Task1 from './tasks/Task1';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\nimport Task4 from './tasks/Task4';\r\n\r\nfunction Lab1() {\r\n  return (\r\n    <>\r\n      <Task1 />\r\n      <Task2 />\r\n      <Task3 />\r\n      <Task4 />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab1;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\n\nimport Lab1 from './Lab1/Lab1';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-container__heading\">Algorytmy Kombinatoryczne</h1>\n      <Router>\n        <div>\n          <nav>\n            <ul className=\"nav-list\">\n              <li className=\"nav-list__item\">\n                <NavLink\n                  to=\"/lab1\"\n                  className=\"item__link\"\n                  activeStyle={{\n                    fontWeight: 'bold',\n                    textDecoration: 'underline',\n                  }}\n                >\n                  lab1\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route path=\"/lab1\">\n              <Lab1 />\n            </Route>\n            <Route path=\"/\"></Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}