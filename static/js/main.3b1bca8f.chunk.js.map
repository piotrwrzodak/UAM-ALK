{"version":3,"sources":["components/Lab1/algorithms/alg1.js","components/Lab1/tasks/Task1.js","components/Lab1/algorithms/alg2.js","components/Lab1/tasks/Task2.js","components/Lab1/algorithms/alg3.js","components/Lab1/tasks/Task3.js","components/Lab1/algorithms/alg4.js","components/Lab1/tasks/Task4.js","components/Lab1/Lab1.js","components/Lab2/algorithms/alg1.js","components/Lab2/tasks/Task1.js","components/Lab2/algorithms/alg2.js","components/Lab2/tasks/Task2.js","components/Lab2/algorithms/alg3.js","components/Lab2/tasks/Task3.js","components/Lab2/Lab2.js","components/Lab3/algorithms/alg2.js","components/Lab3/tasks/Task2.js","components/Lab3/algorithms/alg3.js","components/Lab3/tasks/Task3.js","components/Lab3/Lab3.js","components/Lab4/algorithms/alg1.js","components/Lab4/tasks/Task1.js","components/Lab4/algorithms/alg2.js","components/Lab4/tasks/Task2.js","components/Lab4/algorithms/alg3.js","components/Lab4/tasks/Task3.js","components/Lab4/Lab4.js","components/Lab5/algorithms/alg1.js","components/Lab5/tasks/Task1.js","components/Lab5/algorithms/alg2.js","components/Lab5/tasks/Task2.js","components/Lab5/algorithms/alg3.js","components/Lab5/tasks/Task3.js","components/Lab5/Lab5.js","components/App.js","index.js"],"names":["replaceElement","array","index","value","temp","slice","splice","alg1","n","k","i","Array","fill","a","finalSet","push","every","Task1","useState","setN","setK","output","setOutput","className","onSubmit","e","preventDefault","out","parseInt","type","min","name","placeholder","onChange","target","length","map","reduce","b","concat","alg2","newValue","Task2","max","createArray","foo","alg3","Task3","generateBinaryArrays","filter","x","alg4","auxiliaryArray","Task4","number","Lab1","subset","includes","split","doesArrayHaveDuplicates","Set","size","doesArrayContainWrongValues","t","inputSubset","rank","indexOf","j","setT","pattern","decodeArray","r","setR","finalArray","variables","recursionAlg","Lab2","rankArray","bit","join","createRankArray","createDivRankArray","pop","unshift","calculateArrays","divRankArray","Lab3","arr","sort","replace","JSON","stringify","binomial","fact","fillArrayWithInitialValues","calculateValues","initalArray","Number","isInteger","sum","bellArray","Lab5","App","AppLink","props","to","activeStyle","fontWeight","textDecoration","path","Lab4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1bca8f.chunk.js","sourcesContent":["const alg1 = (n, k) => {\r\n  var array = new Array(n).fill(1);\r\n  var a = new Array(n).fill(k);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n  let i;\r\n\r\n  while (!array.every((value, index) => value === a[index])) {\r\n    i = n - 1;\r\n    if (array[i] < k) {\r\n      array = replaceElement(array, i, array[i] + 1);\r\n    } else if (array[i] === k) {\r\n      while (array[i] === k) {\r\n        i--;\r\n      }\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, 1);\r\n        i++;\r\n      }\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg1;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg1 from '../algorithms/alg1';\r\n\r\nconst Task1 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg1(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 1</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n","const alg2 = (n) => {\r\n  var array = new Array(n).fill(1);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n\r\n  let i;\r\n  let newValue;\r\n\r\n  while (true) {\r\n    i = n - 1;\r\n\r\n    if (array[i] === i + 1 || array[i] === 9) {\r\n      while (array[i] === i + 1 || array[i] === 9) {\r\n        i--;\r\n      }\r\n      if (i < 0) break;\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, 1);\r\n        i++;\r\n      }\r\n    } else if (array[i] < i + 1) {\r\n      newValue = array[i] + 1 < 9 ? array[i] + 1 : 9;\r\n      array = replaceElement(array, i, newValue);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg2(parseInt(n));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            // with more than 9 => out of memory error\r\n            max=\"9\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","const alg3 = (n, k) => {\r\n  var array = createArray(n);\r\n  var finalSet = [];\r\n  finalSet.push(array);\r\n  let i;\r\n\r\n  while (true) {\r\n    i = n - 1;\r\n    if (array[i] === k - n + i + 1) {\r\n      while (array[i] === k - n + i + 1) {\r\n        i--;\r\n      }\r\n      if (i < 0) break;\r\n      array = replaceElement(array, i, array[i] + 1);\r\n      i++;\r\n      while (i < n) {\r\n        array = replaceElement(array, i, array[i - 1] + 1);\r\n        i++;\r\n      }\r\n    } else if (array[i] < k) {\r\n      array = replaceElement(array, i, array[i] + 1);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst createArray = (n) => {\r\n  var foo = [];\r\n  for (var i = 1; i <= n; i++) {\r\n    foo.push(i);\r\n  }\r\n  return foo;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg3(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min={n}\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array) => (\r\n              <li key={array} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","const alg4 = (n) => {\r\n  let finalSet = [];\r\n  if (n === 0) {\r\n    finalSet.push([]);\r\n    return finalSet;\r\n  }\r\n  let array = generateBinaryArrays(n);\r\n  let auxiliaryArray;\r\n\r\n  array.map((a) => {\r\n    auxiliaryArray = [];\r\n    a.filter((value, index) =>\r\n      value === 1 ? auxiliaryArray.push(index + 1) : null\r\n    );\r\n    return finalSet.push(auxiliaryArray);\r\n  });\r\n  return finalSet;\r\n};\r\n\r\nconst generateBinaryArrays = (n) => {\r\n  let finalSet = [];\r\n  let array = new Array(n).fill(0);\r\n  finalSet.push(array);\r\n  let even;\r\n  let i;\r\n  while (true) {\r\n    i = n - 1;\r\n    even = array.filter((x) => x === 1).length % 2 === 0 ? true : false;\r\n\r\n    if (even) {\r\n      array = replaceElement(array, i, array[i] === 1 ? 0 : 1);\r\n    } else {\r\n      while (array[i] === 0) {\r\n        i--;\r\n      }\r\n      if (i === 0) break;\r\n\r\n      array = replaceElement(array, i - 1, array[i - 1] === 1 ? 0 : 1);\r\n    }\r\n    finalSet.push(array);\r\n  }\r\n\r\n  return finalSet;\r\n};\r\n\r\nconst replaceElement = (array, index, value) => {\r\n  let temp = array.slice();\r\n  temp.splice(index, 1, value);\r\n  return temp;\r\n};\r\n\r\nexport default alg4;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg4 from '../algorithms/alg4';\r\n\r\nconst Task4 = ({ number }) => {\r\n  const [n, setN] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg4(parseInt(n));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie {number}</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {/* empty array cant display its elements and its not worth to check 2^n times if it is this set */}\r\n            <li key=\"empty\" className=\"output-list__item\">\r\n              ∅\r\n            </li>\r\n            {output.map((array, index) => (\r\n              <li key={index} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task4;\r\n","import React from 'react';\r\n\r\nimport Task1 from './tasks/Task1';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\nimport Task4 from './tasks/Task4';\r\n\r\nfunction Lab1() {\r\n  return (\r\n    <>\r\n      <Task1 />\r\n      <Task2 />\r\n      <Task3 />\r\n      <Task4 number=\"4\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab1;\r\n","const alg1 = (n, inputSubset) => {\r\n  let array = [];\r\n  let rank = 0;\r\n\r\n  let t = createArray(inputSubset);\r\n\r\n  if (\r\n    inputSubset === '' ||\r\n    t.length > n ||\r\n    doesArrayHaveDuplicates(t) ||\r\n    doesArrayContainWrongValues(t, n)\r\n  ) {\r\n    return 'to nie jest podzbiór';\r\n  } else {\r\n    for (let i = 1; i <= n; i++) {\r\n      if (t.indexOf(i) >= 0) {\r\n        array.push(1);\r\n      } else array.push(0);\r\n    }\r\n\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (array[j] === 1) {\r\n        rank += 2 ** (array.length - j - 1);\r\n      }\r\n    }\r\n\r\n    return rank;\r\n  }\r\n};\r\n\r\nconst createArray = (subset) => {\r\n  let auxiliaryArray;\r\n  if (subset.includes(',')) {\r\n    auxiliaryArray = subset.split(',').map((value) => parseInt(value));\r\n  } else {\r\n    auxiliaryArray = [parseInt(subset)];\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst doesArrayHaveDuplicates = (array) => {\r\n  return array.length !== new Set(array).size;\r\n};\r\n\r\nconst doesArrayContainWrongValues = (t, n) => {\r\n  for (let i = 0; i < t.length; i++) {\r\n    if (parseInt(t[i]) > n) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default alg1;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg1 from '../algorithms/alg1';\r\n\r\nconst Task1 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [t, setT] = useState('');\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg1(n, t);\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 1</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz podzbiór T:\r\n          <input\r\n            type=\"text\"\r\n            name=\"t\"\r\n            placeholder=\"np. 1,3,12\"\r\n            pattern=\"((([0-9]{1,},){1,})||[0-9]{1,})+\"\r\n            className=\"input\"\r\n            onChange={(e) => setT(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output !== null && (\r\n        <>\r\n          <h3 className=\"output-size\">Rank: </h3>\r\n          <ul className=\"output-list\">\r\n            <li className=\"output-list__item\">{output}</li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n","const alg2 = (n, r) => {\r\n  let array = createArray(n, r);\r\n  let finalArray = decodeArray(array);\r\n  return finalArray;\r\n};\r\n\r\nconst decodeArray = (array) => {\r\n  let auxiliaryArray = [];\r\n  array.filter((value, i) => (value === 1 ? auxiliaryArray.push(i + 1) : null));\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst createArray = (n, r) => {\r\n  let value = r;\r\n  let array = [];\r\n  for (let i = 0; i < n; i++) {\r\n    if (value >= 2 ** (n - i - 1)) {\r\n      array.push(1);\r\n      value -= 2 ** (n - i - 1);\r\n    } else {\r\n      array.push(0);\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(0);\r\n  const [r, setR] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setOutput(alg2(parseInt(n), parseInt(r)));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość r:\r\n          <input\r\n            type=\"number\"\r\n            name=\"r\"\r\n            placeholder={r}\r\n            min=\"0\"\r\n            max={2 ** n - 1}\r\n            className=\"input\"\r\n            onChange={(e) => setR(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i r={r}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Podzbiór: </h3>\r\n          <ul className=\"output-list\">\r\n            {output.length ? (\r\n              <li className=\"output-list__item\">\r\n                {output\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ) : (\r\n              <li key=\"empty\" className=\"output-list__item\">\r\n                ∅\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","let finalArray = [];\r\nlet variables = { n: 1, k: 1 };\r\n\r\nconst alg3 = (n, k) => {\r\n  finalArray = [];\r\n  variables = { n, k };\r\n  let array = [];\r\n\r\n  recursionAlg(array, 0);\r\n\r\n  return finalArray;\r\n};\r\n\r\nconst recursionAlg = (array, i) => {\r\n  if (i === variables.n) {\r\n    finalArray.push(array);\r\n  } else {\r\n    for (let j = 0; j < variables.k; j++) {\r\n      let auxiliaryArray = array.slice();\r\n      auxiliaryArray.push(j + 1);\r\n      recursionAlg(auxiliaryArray, i + 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setOutput(alg3(parseInt(n), parseInt(k)));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            placeholder={k}\r\n            className=\"input\"\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Number of elements: {output.length}</h3>\r\n          <ul className=\"output-list\">\r\n            {output.map((array, index) => (\r\n              <li key={index} className=\"output-list__item\">\r\n                {array\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","import React from 'react';\r\n\r\nimport Task1 from './tasks/Task1';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\n\r\nfunction Lab2() {\r\n  return (\r\n    <>\r\n      <Task1 />\r\n      <Task2 />\r\n      <Task3 />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab2;\r\n","const alg2 = (n, inputSubset) => {\r\n  let array = [];\r\n\r\n  let t = createArray(inputSubset);\r\n\r\n  if (\r\n    inputSubset === '' ||\r\n    t.length > n ||\r\n    doesArrayHaveDuplicates(t) ||\r\n    doesArrayContainWrongValues(t, n)\r\n  ) {\r\n    return 'to nie jest podzbiór';\r\n  } else {\r\n    for (let i = 1; i <= n; i++) {\r\n      if (t.indexOf(i) >= 0) {\r\n        array.push(1);\r\n      } else array.push(0);\r\n    }\r\n\r\n    let rankArray = [];\r\n    let bit = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      // ^ is XOR operator\r\n      bit = bit ^ array[i];\r\n      rankArray.push(bit);\r\n    }\r\n\r\n    return parseInt(rankArray.join(''), 2);\r\n  }\r\n};\r\n\r\nconst createArray = (subset) => {\r\n  let auxiliaryArray;\r\n  if (subset.includes(',')) {\r\n    auxiliaryArray = subset.split(',').map((value) => parseInt(value));\r\n  } else {\r\n    auxiliaryArray = [parseInt(subset)];\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst doesArrayHaveDuplicates = (array) => {\r\n  return array.length !== new Set(array).size;\r\n};\r\n\r\nconst doesArrayContainWrongValues = (t, n) => {\r\n  for (let i = 0; i < t.length; i++) {\r\n    if (parseInt(t[i]) > n || parseInt(t[i]) < 0) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [t, setT] = useState('');\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg2(n, t);\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz podzbiór T:\r\n          <input\r\n            type=\"text\"\r\n            name=\"t\"\r\n            placeholder=\"np. 1,3,12\"\r\n            pattern=\"((([0-9]{1,},){1,})||[0-9]{1,})+\"\r\n            className=\"input\"\r\n            onChange={(e) => setT(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {output !== null && (\r\n        <>\r\n          <h3 className=\"output-size\">Rank: </h3>\r\n          <ul className=\"output-list\">\r\n            <li className=\"output-list__item\">{output}</li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","const alg3 = (n, r) => {\r\n  if (r > 2 ** n - 1 || r < 0 || n < 1) return 'nieprawidłowe dane wejsciowe';\r\n  let rankArray = createRankArray(n, r);\r\n  let divRankArray = createDivRankArray(rankArray);\r\n  let finalArray = calculateArrays(rankArray, divRankArray);\r\n  let subset = decodeArray(finalArray);\r\n  return subset;\r\n};\r\n\r\nconst createRankArray = (n, r) => {\r\n  let value = r;\r\n  let array = [];\r\n  for (let i = 0; i < n; i++) {\r\n    if (value >= 2 ** (n - i - 1)) {\r\n      array.push(1);\r\n      value -= 2 ** (n - i - 1);\r\n    } else {\r\n      array.push(0);\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nconst createDivRankArray = (array) => {\r\n  let auxiliaryArray = array.slice();\r\n  auxiliaryArray.pop();\r\n  auxiliaryArray.unshift(0);\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst calculateArrays = (rankArray, divRankArray) => {\r\n  let auxiliaryArray = [];\r\n  for (let i = 0; i < rankArray.length; i++) {\r\n    auxiliaryArray.push(rankArray[i] ^ divRankArray[i]);\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst decodeArray = (array) => {\r\n  let auxiliaryArray = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i] === 1) {\r\n      auxiliaryArray.push(i + 1);\r\n    }\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [r, setR] = useState(1);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setOutput(alg3(parseInt(n), parseInt(r)));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość r:\r\n          <input\r\n            type=\"number\"\r\n            name=\"r\"\r\n            placeholder={r}\r\n            min=\"0\"\r\n            max={2 ** n - 1}\r\n            className=\"input\"\r\n            onChange={(e) => setR(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i r={r}\r\n        </button>\r\n      </form>\r\n      {output && (\r\n        <>\r\n          <h3 className=\"output-size\">Podzbiór: </h3>\r\n          <ul className=\"output-list\">\r\n            {output.length ? (\r\n              <li className=\"output-list__item\">\r\n                {output\r\n                  .reduce((a, b) => {\r\n                    return a.concat(b).concat(',');\r\n                  }, [])\r\n                  .slice(0, -1)}\r\n              </li>\r\n            ) : (\r\n              <li key=\"empty\" className=\"output-list__item\">\r\n                ∅\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","import React from 'react';\r\n\r\nimport { default as Task1 } from '../Lab1/tasks/Task4';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\n\r\nfunction Lab3() {\r\n  return (\r\n    <>\r\n      <Task1 number=\"1\" />\r\n      <Task2 />\r\n      <Task3 />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab3;\r\n","const alg1 = (n, k, t) => {\r\n  n = parseInt(n);\r\n  k = parseInt(k);\r\n\r\n  // subset verification\r\n  let arr = createArray(t).sort((a, b) => a - b);\r\n  if (\r\n    t.replace(/\\s/g, '') === '' ||\r\n    doesArrayHaveDuplicates(arr) ||\r\n    doesArrayContainWrongValues(arr, n) ||\r\n    arr.length !== k\r\n  ) {\r\n    return 'dane T nie jest podzbiorem';\r\n  }\r\n\r\n  // algorithm\r\n  let auxiliaryArray = arr.slice();\r\n  let i = k - 1;\r\n  while (i > -1) {\r\n    if (auxiliaryArray[i] === n - k + i + 1) {\r\n      i--;\r\n    } else {\r\n      auxiliaryArray.splice(i, 1, auxiliaryArray[i] + 1);\r\n\r\n      for (let j = i + 1; j < k; j++) {\r\n        auxiliaryArray.splice(j, 1, auxiliaryArray[j - 1] + 1);\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (JSON.stringify(arr) === JSON.stringify(auxiliaryArray)) {\r\n    return 'dany podzbiór nie ma następnika';\r\n  } else {\r\n    return auxiliaryArray;\r\n  }\r\n};\r\n\r\nconst createArray = (subset) => {\r\n  let auxiliaryArray;\r\n  if (subset.includes(',')) {\r\n    auxiliaryArray = subset.split(',').map((value) => parseInt(value));\r\n  } else {\r\n    auxiliaryArray = [parseInt(subset)];\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst doesArrayHaveDuplicates = (array) => {\r\n  return array.length !== new Set(array).size;\r\n};\r\n\r\nconst doesArrayContainWrongValues = (t, n) => {\r\n  for (let i = 0; i < t.length; i++) {\r\n    if (parseInt(t[i]) > n || parseInt(t[i]) < 0) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default alg1;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg1 from '../algorithms/alg1';\r\n\r\nconst Task1 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [t, setT] = useState('');\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg1(n, k, t);\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 1</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            placeholder={k}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setK(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz podzbiór T:\r\n          <input\r\n            type=\"text\"\r\n            name=\"t\"\r\n            placeholder=\"np. 1,3,12\"\r\n            pattern=\"(([0-9]{1,},){1,}||[0-9]{1,})+[0-9]{1,}\"\r\n            className=\"input\"\r\n            onChange={(e) => setT(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}, k={k} i T={t}\r\n        </button>\r\n      </form>\r\n      {output !== null && (\r\n        <>\r\n          <h3 className=\"output-size\">Następnik:</h3>\r\n          <ul className=\"output-list\">\r\n            <li className=\"output-list__item\">{output}</li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n","const alg2 = (n, k, t) => {\r\n  n = parseInt(n);\r\n  k = parseInt(k);\r\n\r\n  // subset verification\r\n  let arr = createArray(t).sort((a, b) => a - b);\r\n  if (\r\n    t.replace(/\\s/g, '') === '' ||\r\n    doesArrayHaveDuplicates(arr) ||\r\n    doesArrayContainWrongValues(arr, n) ||\r\n    arr.length !== k\r\n  ) {\r\n    return 'dane T nie jest podzbiorem';\r\n  }\r\n\r\n  // algorithm\r\n  let r = 0;\r\n  arr.unshift(0);\r\n  for (let i = 1; i <= k; i++) {\r\n    if (arr[i - 1] + 1 <= arr[i] - 1) {\r\n      for (let j = arr[i - 1] + 1; j <= arr[i] - 1; j++) {\r\n        r += binomial(n - j, k - i);\r\n      }\r\n    }\r\n  }\r\n  return r;\r\n};\r\n\r\nconst binomial = (a, b) => {\r\n  let numerator = fact(a);\r\n  let denominator = fact(a - b) * fact(b);\r\n  return numerator / denominator;\r\n};\r\n\r\nconst fact = (x) => {\r\n  if (x === 0) return 1;\r\n  return x * fact(x - 1);\r\n};\r\n\r\nconst createArray = (subset) => {\r\n  let auxiliaryArray;\r\n  if (subset.includes(',')) {\r\n    auxiliaryArray = subset.split(',').map((value) => parseInt(value));\r\n  } else {\r\n    auxiliaryArray = [parseInt(subset)];\r\n  }\r\n  return auxiliaryArray;\r\n};\r\n\r\nconst doesArrayHaveDuplicates = (array) => {\r\n  return array.length !== new Set(array).size;\r\n};\r\n\r\nconst doesArrayContainWrongValues = (t, n) => {\r\n  for (let i = 0; i < t.length; i++) {\r\n    if (parseInt(t[i]) > n || parseInt(t[i]) < 0) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [t, setT] = useState('');\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg2(n, k, t);\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            placeholder={k}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setK(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz podzbiór T:\r\n          <input\r\n            type=\"text\"\r\n            name=\"t\"\r\n            placeholder=\"np. 1,3,12\"\r\n            pattern=\"(([0-9]{1,},){1,}||[0-9]{1,})+[0-9]{1,}\"\r\n            className=\"input\"\r\n            onChange={(e) => setT(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}, k={k} i T={t}\r\n        </button>\r\n      </form>\r\n      {output !== null && (\r\n        <>\r\n          <h3 className=\"output-size\">Rank:</h3>\r\n          <ul className=\"output-list\">\r\n            <li className=\"output-list__item\">{output}</li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","const alg3 = (n, k, r) => {\r\n  n = parseInt(n);\r\n  k = parseInt(k);\r\n  r = parseInt(r);\r\n\r\n  if (binomial(n, k) > r && n > 0 && k > 0 && r > -1 && n >= k) {\r\n    let array = [];\r\n\r\n    let x = 1;\r\n    for (let i = 0; i < k; i++) {\r\n      while (binomial(n - x, k - i - 1) <= r) {\r\n        r -= binomial(n - x, k - i - 1);\r\n        x++;\r\n      }\r\n      array.push(x);\r\n      x++;\r\n    }\r\n\r\n    return array;\r\n  } else {\r\n    return 'bad input';\r\n  }\r\n};\r\n\r\nconst binomial = (a, b) => {\r\n  let numerator = fact(a);\r\n  let denominator = fact(a - b) * fact(b);\r\n  return numerator / denominator;\r\n};\r\n\r\nconst fact = (x) => {\r\n  if (x === 0) return 1;\r\n  return x * fact(x - 1);\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(1);\r\n  const [k, setK] = useState(1);\r\n  const [r, setR] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg3(n, k, r);\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"n\"\r\n            placeholder={n}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setN(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"k\"\r\n            placeholder={k}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setK(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <p>\r\n          Wpisz wartość r:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"r\"\r\n            placeholder={r}\r\n            className=\"input\"\r\n            onChange={(e) => {\r\n              setR(e.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}, k={k} i r={r}\r\n        </button>\r\n      </form>\r\n      {output !== null && (\r\n        <>\r\n          <h3 className=\"output-size\">Podzbiór:</h3>\r\n          <ul className=\"output-list\">\r\n            <li className=\"output-list__item\">{output}</li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","import React from 'react';\r\n\r\nimport Task1 from './tasks/Task1';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\n\r\nfunction Lab3() {\r\n  return (\r\n    <>\r\n      <Task1 />\r\n      <Task2 />\r\n      <Task3 />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab3;\r\n","const alg1 = (n, k) => {\r\n  if (k > n) {\r\n    return 0;\r\n  }\r\n\r\n  let initalArray = createArray(n, k);\r\n  let array = fillArrayWithInitialValues(initalArray);\r\n  let finalArray = calculateValues(array, n, k);\r\n\r\n  return finalArray;\r\n};\r\n\r\nconst createArray = (n, k) => {\r\n  let x = [];\r\n\r\n  for (let i = 0; i < n + 1; i++) {\r\n    x.push([]);\r\n    for (let j = 0; j < k + 1; j++) {\r\n      x[i].push(null);\r\n    }\r\n  }\r\n  return x;\r\n};\r\n\r\nconst fillArrayWithInitialValues = (array) => {\r\n  array[0][0] = 1;\r\n  for (let i = 1; i < array.length; i++) {\r\n    array[i][0] = 0;\r\n  }\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (i + 1 === j) {\r\n        array[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nconst calculateValues = (array, n, k) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < i + 1; j++) {\r\n      if (array[i][j] === null) {\r\n        array[i][j] = j * array[i - 1][j] + array[i - 1][j - 1];\r\n      }\r\n      if (array[n][k] !== null) {\r\n        return array[n][k];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default alg1;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg1 from '../algorithms/alg1';\r\n\r\nconst Task1 = () => {\r\n  const [n, setN] = useState(0);\r\n  const [k, setK] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg1(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 1</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {Number.isInteger(output) && <div className=\"output-list\">{output}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n","const alg2 = (n, k) => {\r\n  if (k > n) {\r\n    return 0;\r\n  }\r\n\r\n  let initalArray = createArray(n, k);\r\n  let array = fillArrayWithInitialValues(initalArray);\r\n  let finalArray = calculateValues(array, n, k);\r\n\r\n  return finalArray;\r\n};\r\n\r\nconst createArray = (n, k) => {\r\n  let x = [];\r\n\r\n  for (let i = 0; i < n + 1; i++) {\r\n    x.push([]);\r\n    for (let j = 0; j < k + 1; j++) {\r\n      x[i].push(null);\r\n    }\r\n  }\r\n  return x;\r\n};\r\n\r\nconst fillArrayWithInitialValues = (array) => {\r\n  array[0][0] = 1;\r\n  for (let i = 1; i < array.length; i++) {\r\n    array[i][0] = 0;\r\n  }\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (i + 1 === j) {\r\n        array[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nconst calculateValues = (array, n, k) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < i + 1; j++) {\r\n      if (array[i][j] === null) {\r\n        array[i][j] = array[i - 1][j - 1] - (i - 1) * array[i - 1][j];\r\n      }\r\n      if (array[n][k] !== null) {\r\n        return array[n][k];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default alg2;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg2 from '../algorithms/alg2';\r\n\r\nconst Task2 = () => {\r\n  const [n, setN] = useState(0);\r\n  const [k, setK] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg2(parseInt(n), parseInt(k));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 2</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          Wpisz wartość k:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"k\"\r\n            className=\"input\"\r\n            placeholder={k}\r\n            onChange={(e) => setK(e.target.value)}\r\n          />\r\n        </p>\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n} i k={k}\r\n        </button>\r\n      </form>\r\n      {Number.isInteger(output) && <div className=\"output-list\">{output}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n","const alg3 = (n) => {\r\n  let sum = 0;\r\n  let bellArray = [];\r\n  bellArray.push(1);\r\n  for (let i = 1; i < n + 1; i++) {\r\n    for (let k = 0; k < i; k++) {\r\n      sum += binomial(i - 1, k) * bellArray[k];\r\n    }\r\n    bellArray.push(sum);\r\n    sum = 0;\r\n  }\r\n  return bellArray[n];\r\n};\r\n\r\nconst binomial = (a, b) => {\r\n  let numerator = fact(a);\r\n  let denominator = fact(a - b) * fact(b);\r\n  return numerator / denominator;\r\n};\r\n\r\nconst fact = (x) => {\r\n  if (x === 0) return 1;\r\n  return x * fact(x - 1);\r\n};\r\n\r\nexport default alg3;\r\n","import React, { useState } from 'react';\r\n\r\nimport alg3 from '../algorithms/alg3';\r\n\r\nconst Task3 = () => {\r\n  const [n, setN] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let out = alg3(parseInt(n));\r\n    setOutput(out);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"heading\">Zadanie 3</h2>\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <p>\r\n          Wpisz wartość n:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            name=\"n\"\r\n            className=\"input\"\r\n            placeholder={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <button type=\"submit\" className=\"button\">\r\n          Generuj dla n={n}\r\n        </button>\r\n      </form>\r\n      {Number.isInteger(output) && <div className=\"output-list\">{output}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n","import React from 'react';\r\n\r\nimport Task1 from './tasks/Task1';\r\nimport Task2 from './tasks/Task2';\r\nimport Task3 from './tasks/Task3';\r\n\r\nfunction Lab5() {\r\n  return (\r\n    <>\r\n      <Task1 />\r\n      <Task2 />\r\n      <Task3 />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lab5;\r\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n} from 'react-router-dom';\n\nimport Lab1 from './Lab1/Lab1';\nimport Lab2 from './Lab2/Lab2';\nimport Lab3 from './Lab3/Lab3';\nimport Lab4 from './Lab4/Lab4';\nimport Lab5 from './Lab5/Lab5';\n\nfunction App() {\n  const AppLink = (props) => {\n    return (\n      <li className=\"nav-list__item\">\n        <NavLink\n          to={props.to}\n          className=\"item__link\"\n          activeStyle={{\n            fontWeight: 'bold',\n            textDecoration: 'underline',\n          }}\n        >\n          {props.to}\n        </NavLink>\n      </li>\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-container__heading\">Algorytmy Kombinatoryczne</h1>\n      <Router>\n        <div>\n          <nav>\n            <ul className=\"nav-list\">\n              <AppLink to=\"lab1\" />\n              <AppLink to=\"lab2\" />\n              <AppLink to=\"lab3\" />\n              <AppLink to=\"lab4\" />\n              <AppLink to=\"lab5\" />\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route path=\"/lab1\">\n              <Lab1 />\n            </Route>\n            <Route path=\"/lab2\">\n              <Lab2 />\n            </Route>\n            <Route path=\"/lab3\">\n              <Lab3 />\n            </Route>\n            <Route path=\"/lab4\">\n              <Lab4 />\n            </Route>\n            <Route path=\"/lab5\">\n              <Lab5 />\n            </Route>\n            <Route path=\"/\" />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}